<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hellothomas.tinyurl.infrastructure.mapper.UrlMappingMapper">
    <resultMap id="BaseResultMap" type="com.hellothomas.tinyurl.domain.UrlMapping">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="origin_url" jdbcType="VARCHAR" property="originUrl"/>
        <result column="origin_url_md5" jdbcType="VARCHAR" property="originUrlMd5"/>
        <result column="tiny_url" jdbcType="VARCHAR" property="tinyUrl"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="url_type" jdbcType="INTEGER" property="urlType"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="expire_time" jdbcType="TIMESTAMP" property="expireTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, origin_url, origin_url_md5, tiny_url, user_id, url_type, create_time, update_time,
    expire_time
  </sql>
    <select id="selectByExample" parameterType="com.hellothomas.tinyurl.domain.UrlMappingExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from url_mapping
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from url_mapping
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from url_mapping
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.hellothomas.tinyurl.domain.UrlMappingExample">
        delete from url_mapping
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.hellothomas.tinyurl.domain.UrlMapping">
    insert into url_mapping (id, origin_url, origin_url_md5,
      tiny_url, user_id, url_type,
      create_time, update_time, expire_time
      )
    values (#{id,jdbcType=BIGINT}, #{originUrl,jdbcType=VARCHAR}, #{originUrlMd5,jdbcType=VARCHAR},
      #{tinyUrl,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{urlType,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{expireTime,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.hellothomas.tinyurl.domain.UrlMapping">
        insert into url_mapping
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="originUrl != null">
                origin_url,
            </if>
            <if test="originUrlMd5 != null">
                origin_url_md5,
            </if>
            <if test="tinyUrl != null">
                tiny_url,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="urlType != null">
                url_type,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="expireTime != null">
                expire_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="originUrl != null">
                #{originUrl,jdbcType=VARCHAR},
            </if>
            <if test="originUrlMd5 != null">
                #{originUrlMd5,jdbcType=VARCHAR},
            </if>
            <if test="tinyUrl != null">
                #{tinyUrl,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="urlType != null">
                #{urlType,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="expireTime != null">
                #{expireTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.hellothomas.tinyurl.domain.UrlMappingExample"
            resultType="java.lang.Long">
        select count(*) from url_mapping
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update url_mapping
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.originUrl != null">
                origin_url = #{record.originUrl,jdbcType=VARCHAR},
            </if>
            <if test="record.originUrlMd5 != null">
                origin_url_md5 = #{record.originUrlMd5,jdbcType=VARCHAR},
            </if>
            <if test="record.tinyUrl != null">
                tiny_url = #{record.tinyUrl,jdbcType=VARCHAR},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=VARCHAR},
            </if>
            <if test="record.urlType != null">
                url_type = #{record.urlType,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.expireTime != null">
                expire_time = #{record.expireTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update url_mapping
        set id = #{record.id,jdbcType=BIGINT},
        origin_url = #{record.originUrl,jdbcType=VARCHAR},
        origin_url_md5 = #{record.originUrlMd5,jdbcType=VARCHAR},
        tiny_url = #{record.tinyUrl,jdbcType=VARCHAR},
        user_id = #{record.userId,jdbcType=VARCHAR},
        url_type = #{record.urlType,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        expire_time = #{record.expireTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.hellothomas.tinyurl.domain.UrlMapping">
        update url_mapping
        <set>
            <if test="originUrl != null">
                origin_url = #{originUrl,jdbcType=VARCHAR},
            </if>
            <if test="originUrlMd5 != null">
                origin_url_md5 = #{originUrlMd5,jdbcType=VARCHAR},
            </if>
            <if test="tinyUrl != null">
                tiny_url = #{tinyUrl,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="urlType != null">
                url_type = #{urlType,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="expireTime != null">
                expire_time = #{expireTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.hellothomas.tinyurl.domain.UrlMapping">
    update url_mapping
    set origin_url = #{originUrl,jdbcType=VARCHAR},
      origin_url_md5 = #{originUrlMd5,jdbcType=VARCHAR},
      tiny_url = #{tinyUrl,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      url_type = #{urlType,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      expire_time = #{expireTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>